<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jcy</groupId>
    <artifactId>timeline-origin</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <modules>
        <module>build-tools</module>
        <module>timeline-core</module>
        <module>timeline-util</module>
        <module>timeline-swing</module>
        <module>timeline-web</module>
        <module>timeline-test-util</module>
        <module>timeline-swt</module>
    </modules>
    <packaging>pom</packaging>

    <name>timeline-origin</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <ui.test.vmargs></ui.test.vmargs>
        <revision>0.0.1-SNAPSHOT</revision>
        <junit-version>4.12</junit-version>
        <assertj-version>3.0.0</assertj-version>
        <mockito-version>1.10.19</mockito-version>
        <burst-version>1.1.0</burst-version>
        <junitparams-version>1.0.4</junitparams-version>
        <jacoco.version>0.8.2</jacoco.version>
        <cp-suite-version>1.2.7</cp-suite-version>
        <swt-version>4.3</swt-version>
        <slf4j-version>1.7.25</slf4j-version>
        <logback-version>1.2.3</logback-version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.burst</groupId>
            <artifactId>burst-junit4</artifactId>
            <version>${burst-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
            <version>${junitparams-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.takari.junit</groupId>
            <artifactId>takari-cpsuite</artifactId>
            <version>${cp-suite-version}</version>
            <scope>test</scope>
        </dependency>

        <!-- log -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback-version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- 静态代码分析 -->
            <!-- SpotBugs -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>3.1.8</version>
                <configuration>
                    <!-- Low、Medium和High (Low最严格) -->
                    <threshold>Medium</threshold>
                    <failOnError>true</failOnError>
                </configuration>
                <executions>
                    <execution>
                        <id>run-spotbugs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>spotbugs</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- PMD -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <sourceEncoding>utf-8</sourceEncoding>
                    <targetJdk>1.8</targetJdk>
                </configuration>
                <executions>
                    <execution>
                        <id>run-pmd</id>
                        <!-- 在package 阶段触发 -->
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>pmd</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- CheckStyle -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>run-checkstyle-alibaba</id>
                        <phase>validate</phase>
                        <configuration>
                            <configLocation>build-tools/src/main/resources/alibaba_checks.xml</configLocation>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>false</failsOnError>
                            <linkXRef>false</linkXRef>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                            <encoding>utf-8</encoding>
                            <outputFile>${project.build.directory}/checkstyle/alibaba/checkstyle-result.xml</outputFile>
                        </configuration>
                        <goals>
                            <goal>checkstyle</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>run-checkstyle-google</id>
                        <phase>validate</phase>
                        <configuration>
                            <configLocation>google_checks.xml</configLocation>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>false</failsOnError>
                            <linkXRef>false</linkXRef>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                            <encoding>utf-8</encoding>
                            <outputFile>${project.build.directory}/checkstyle/google/checkstyle-result.xml</outputFile>
                        </configuration>
                        <goals>
                            <goal>checkstyle</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- jacoco -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <!--
                        在maven的initialize阶段，将Jacoco的runtime agent作为VM的一个参数
                        传给被测程序，用于监控JVM中的调用。
                        -->
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>
                                ${project.build.directory}/coverage-reports/jacoco.exec
                            </destFile>
                            <propertyName>surefireArgLine</propertyName>
                            <excludes>
                                <exclude>**/Application.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <!--
                    在程序的verify阶段，执行report测试的程序。
                    文件的输入为perpare-agent阶段中设置或者默认的jacoco.exec.
                    参数 includes和excludes可用来选定report中过滤的类。
                    -->
                    <execution>
                        <id>default-report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.1</version>
                <configuration>
                    <skipTests>false</skipTests>
                    <testFailureIgnore>true</testFailureIgnore>
                    <argLine>${surefireArgLine}</argLine>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>